// <auto-generated />
using System;
using DMR_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DMR_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210127090150_updateđispatchListTbl4")]
    partial class updateđispatchListTbl4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DMR_API.Models.Abnormal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Batch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ingredient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Abnormals");
                });

            modelBuilder.Entity("DMR_API.Models.ArtProcess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleNoID")
                        .HasColumnType("int");

                    b.Property<int>("ProcessID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ArticleNoID");

                    b.HasIndex("ProcessID");

                    b.ToTable("ArtProcesses");
                });

            modelBuilder.Entity("DMR_API.Models.ArticleNo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModelNoID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ModelNoID");

                    b.ToTable("ArticleNos");
                });

            modelBuilder.Entity("DMR_API.Models.BPFCEstablish", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<bool>("ApprovalStatus")
                        .HasColumnType("bit");

                    b.Property<int>("ArtProcessID")
                        .HasColumnType("int");

                    b.Property<int>("ArticleNoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BuildingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FinishedStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ModelNameID")
                        .HasColumnType("int");

                    b.Property<int>("ModelNoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ArtProcessID");

                    b.HasIndex("ArticleNoID");

                    b.HasIndex("ModelNameID");

                    b.HasIndex("ModelNoID");

                    b.ToTable("BPFCEstablishes");
                });

            modelBuilder.Entity("DMR_API.Models.BPFCHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("After")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BPFCEstablishID")
                        .HasColumnType("int");

                    b.Property<string>("Before")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("BPFCHistories");
                });

            modelBuilder.Entity("DMR_API.Models.Building", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("DMR_API.Models.BuildingUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID");

                    b.ToTable("BuildingUser");
                });

            modelBuilder.Entity("DMR_API.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BPFCEstablishID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("DMR_API.Models.DispatchList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BPFCID")
                        .HasColumnType("int");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("ColorCode")
                        .HasColumnType("int");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveredConsumption")
                        .HasColumnType("float");

                    b.Property<DateTime>("EstimatedFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishDispatchingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishTimeOfPeriod")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<string>("GlueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GlueNameID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MixedConsumption")
                        .HasColumnType("float");

                    b.Property<int>("MixingInfoID")
                        .HasColumnType("int");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("StandardConsumption")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDispatchingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTimeOfPeriod")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlueNameID");

                    b.HasIndex("PlanID");

                    b.ToTable("DispatchList");
                });

            modelBuilder.Entity("DMR_API.Models.Glue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BPFCEstablishID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpiredTime")
                        .HasColumnType("int");

                    b.Property<int?>("GlueNameID")
                        .HasColumnType("int");

                    b.Property<int?>("KindID")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialID")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartID")
                        .HasColumnType("int");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BPFCEstablishID");

                    b.HasIndex("GlueNameID");

                    b.HasIndex("KindID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("PartID");

                    b.ToTable("Glues");
                });

            modelBuilder.Entity("DMR_API.Models.GlueIngredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Allow")
                        .HasColumnType("float");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlueID");

                    b.HasIndex("IngredientID");

                    b.ToTable("GlueIngredient");
                });

            modelBuilder.Entity("DMR_API.Models.GlueName", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlueName");
                });

            modelBuilder.Entity("DMR_API.Models.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CBD")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DaysToExpiration")
                        .HasColumnType("float");

                    b.Property<double>("ExpiredTime")
                        .HasColumnType("float");

                    b.Property<int?>("GlueTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrepareTime")
                        .HasColumnType("float");

                    b.Property<double>("Real")
                        .HasColumnType("float");

                    b.Property<double>("ReplacementFrequency")
                        .HasColumnType("float");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<double>("Unit")
                        .HasColumnType("float");

                    b.Property<double>("VOC")
                        .HasColumnType("float");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("GlueTypeID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("DMR_API.Models.IngredientInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Batch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("IngredientsInfos");
                });

            modelBuilder.Entity("DMR_API.Models.IngredientInfoReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Batch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientInfoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("IngredientInfoReports");
                });

            modelBuilder.Entity("DMR_API.Models.Kind", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kinds");
                });

            modelBuilder.Entity("DMR_API.Models.Line", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("DMR_API.Models.LunchTime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID")
                        .IsUnique();

                    b.ToTable("LunchTime");
                });

            modelBuilder.Entity("DMR_API.Models.Mailing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeSend")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Mailings");
                });

            modelBuilder.Entity("DMR_API.Models.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("DMR_API.Models.MixingInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<string>("GlueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MixBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("GlueID");

                    b.ToTable("MixingInfos");
                });

            modelBuilder.Entity("DMR_API.Models.MixingInfoDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Batch")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("MixingInfoID")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("ID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("MixingInfoID");

                    b.ToTable("MixingInfoDetails");
                });

            modelBuilder.Entity("DMR_API.Models.ModelName", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ModelNames");
                });

            modelBuilder.Entity("DMR_API.Models.ModelNo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModelNameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ModelNameID");

                    b.ToTable("ModelNos");
                });

            modelBuilder.Entity("DMR_API.Models.Part", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("DMR_API.Models.Period", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LunchTimeID")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("LunchTimeID");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("DMR_API.Models.Plan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BPFCEstablishID")
                        .HasColumnType("int");

                    b.Property<string>("BPFCName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishWorkingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HourlyOutput")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGenarateTodo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRefreshTodo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartWorkingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkingHour")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BPFCEstablishID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("DMR_API.Models.PlanDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BPFCName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Consumption")
                        .HasColumnType("float");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<string>("GlueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PlanID");

                    b.ToTable("PlanDetails");
                });

            modelBuilder.Entity("DMR_API.Models.Process", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("DMR_API.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DMR_API.Models.ScaleMachine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<string>("MachineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ScaleMachines");
                });

            modelBuilder.Entity("DMR_API.Models.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int?>("GlueTypeID")
                        .HasColumnType("int");

                    b.Property<string>("MachineCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxRPM")
                        .HasColumnType("int");

                    b.Property<int>("MinRPM")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("GlueTypeID");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("DMR_API.Models.Station", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GlueID");

                    b.HasIndex("PlanID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("DMR_API.Models.Stir", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishStiringTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GlueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<int>("MixingInfoID")
                        .HasColumnType("int");

                    b.Property<int>("RPM")
                        .HasColumnType("int");

                    b.Property<int?>("SettingID")
                        .HasColumnType("int");

                    b.Property<int>("StandardDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartScanTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartStiringTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("TotalMinutes")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("MixingInfoID");

                    b.HasIndex("SettingID");

                    b.ToTable("Stirs");
                });

            modelBuilder.Entity("DMR_API.Models.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isShow")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("DMR_API.Models.ToDoList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AbnormalStatus")
                        .HasColumnType("bit");

                    b.Property<int>("BPFCID")
                        .HasColumnType("int");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveredConsumption")
                        .HasColumnType("float");

                    b.Property<DateTime>("EstimatedFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishDispatchingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishMixingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishStirTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<string>("GlueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GlueNameID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MixedConsumption")
                        .HasColumnType("float");

                    b.Property<int>("MixingInfoID")
                        .HasColumnType("int");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("StandardConsumption")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDispatchingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartMixingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartStirTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlueNameID");

                    b.HasIndex("PlanID");

                    b.ToTable("ToDoList");
                });

            modelBuilder.Entity("DMR_API.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessTokenLineNotify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageBase64")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<int>("LevelOC")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OCID")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isLeader")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DMR_API.Models.UserDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("DMR_API.Models.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("dmr_api.Models.Dispatch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishDispatchingTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<int>("MixingInfoID")
                        .HasColumnType("int");

                    b.Property<double>("StandardAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDispatchingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StationID")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LineID");

                    b.HasIndex("MixingInfoID");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("dmr_api.Models.GlueType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<double>("Minutes")
                        .HasColumnType("float");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<double>("RPM")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlueTypes");
                });

            modelBuilder.Entity("DMR_API.Models.ArtProcess", b =>
                {
                    b.HasOne("DMR_API.Models.ArticleNo", "ArticleNo")
                        .WithMany("ArtProcesses")
                        .HasForeignKey("ArticleNoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.ArticleNo", b =>
                {
                    b.HasOne("DMR_API.Models.ModelNo", "ModelNos")
                        .WithMany("ArticleNos")
                        .HasForeignKey("ModelNoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.BPFCEstablish", b =>
                {
                    b.HasOne("DMR_API.Models.ArtProcess", "ArtProcess")
                        .WithMany("BPFCEstablishes")
                        .HasForeignKey("ArtProcessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.ArticleNo", "ArticleNo")
                        .WithMany("BPFCEstablishes")
                        .HasForeignKey("ArticleNoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.ModelName", "ModelName")
                        .WithMany("BPFCEstablishes")
                        .HasForeignKey("ModelNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.ModelNo", "ModelNo")
                        .WithMany("BPFCEstablishes")
                        .HasForeignKey("ModelNoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.BuildingUser", b =>
                {
                    b.HasOne("DMR_API.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.DispatchList", b =>
                {
                    b.HasOne("DMR_API.Models.GlueName", "GlueLibrary")
                        .WithMany()
                        .HasForeignKey("GlueNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.Glue", b =>
                {
                    b.HasOne("DMR_API.Models.BPFCEstablish", "BPFCEstablish")
                        .WithMany("Glues")
                        .HasForeignKey("BPFCEstablishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.GlueName", "GlueName")
                        .WithMany()
                        .HasForeignKey("GlueNameID");

                    b.HasOne("DMR_API.Models.Kind", "Kind")
                        .WithMany("Glues")
                        .HasForeignKey("KindID");

                    b.HasOne("DMR_API.Models.Material", "Material")
                        .WithMany("Glues")
                        .HasForeignKey("MaterialID");

                    b.HasOne("DMR_API.Models.Part", "Part")
                        .WithMany("Glues")
                        .HasForeignKey("PartID");
                });

            modelBuilder.Entity("DMR_API.Models.GlueIngredient", b =>
                {
                    b.HasOne("DMR_API.Models.Glue", "Glue")
                        .WithMany("GlueIngredients")
                        .HasForeignKey("GlueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.Ingredient", b =>
                {
                    b.HasOne("dmr_api.Models.GlueType", "GlueType")
                        .WithMany()
                        .HasForeignKey("GlueTypeID");

                    b.HasOne("DMR_API.Models.Supplier", "Supplier")
                        .WithMany("Ingredients")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.LunchTime", b =>
                {
                    b.HasOne("DMR_API.Models.Building", "Building")
                        .WithOne("LunchTime")
                        .HasForeignKey("DMR_API.Models.LunchTime", "BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.MixingInfo", b =>
                {
                    b.HasOne("DMR_API.Models.Glue", "Glue")
                        .WithMany("MixingInfos")
                        .HasForeignKey("GlueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.MixingInfoDetail", b =>
                {
                    b.HasOne("DMR_API.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.MixingInfo", "MixingInfo")
                        .WithMany("MixingInfoDetails")
                        .HasForeignKey("MixingInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.ModelNo", b =>
                {
                    b.HasOne("DMR_API.Models.ModelName", "ModelName")
                        .WithMany("ModelNos")
                        .HasForeignKey("ModelNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.Period", b =>
                {
                    b.HasOne("DMR_API.Models.LunchTime", null)
                        .WithMany("Periods")
                        .HasForeignKey("LunchTimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.Plan", b =>
                {
                    b.HasOne("DMR_API.Models.BPFCEstablish", "BPFCEstablish")
                        .WithMany("Plans")
                        .HasForeignKey("BPFCEstablishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Building", "Building")
                        .WithMany("Plans")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.PlanDetail", b =>
                {
                    b.HasOne("DMR_API.Models.Plan", "Plan")
                        .WithMany("PlanDetails")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.Setting", b =>
                {
                    b.HasOne("DMR_API.Models.Building", "Building")
                        .WithMany("Settings")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dmr_api.Models.GlueType", "GlueType")
                        .WithMany()
                        .HasForeignKey("GlueTypeID");
                });

            modelBuilder.Entity("DMR_API.Models.Station", b =>
                {
                    b.HasOne("DMR_API.Models.Glue", "Glue")
                        .WithMany()
                        .HasForeignKey("GlueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Plan", "Plan")
                        .WithMany("Stations")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.Stir", b =>
                {
                    b.HasOne("DMR_API.Models.MixingInfo", "MixingInfo")
                        .WithMany("Stirs")
                        .HasForeignKey("MixingInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingID");
                });

            modelBuilder.Entity("DMR_API.Models.ToDoList", b =>
                {
                    b.HasOne("DMR_API.Models.GlueName", "GlueLibrary")
                        .WithMany()
                        .HasForeignKey("GlueNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.Plan", "Plan")
                        .WithMany("ToDoList")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.User", b =>
                {
                    b.HasOne("DMR_API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMR_API.Models.UserRole", b =>
                {
                    b.HasOne("DMR_API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dmr_api.Models.Dispatch", b =>
                {
                    b.HasOne("DMR_API.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("LineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMR_API.Models.MixingInfo", "MixingInfo")
                        .WithMany("Dispatches")
                        .HasForeignKey("MixingInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
